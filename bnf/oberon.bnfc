ModuleDeclare.  Module  ::= "MODULE" Ident ";" [VarDec] "BEGIN" [Stmt] "END" Ident ".";

IntType.        Type ::= "INTEGER";
BoolType.       Type ::= "BOOLEAN";

ETrue.   Boolean ::= "true";
EFalse.  Boolean ::= "false";

VarDeclaration. VarDec  ::= "VAR" [Var] ":" Type ";";   

While.          Stmt ::= "WHILE" "(" Expression ")" "DO" [Stmt] "END";
Assignment.     Stmt ::= Ident ":=" Expression;

VarIdentifier.  Var ::= Ident;

OrExpression.     Expression  ::= Expression  "||" Expression1;
AndExpression.    Expression1 ::= Expression1 "&&" Expression2;
BooleanValue.     Expression2 ::= Boolean;

NEExpression.     Expression2 ::= Expression2 "!=" Expression3;
EQExpression.     Expression2 ::= Expression2 "==" Expression3;
LTExpression.     Expression2 ::= Expression2  "<" Expression3;
LEExpression.     Expression2 ::= Expression2 "<=" Expression3;
GTExpression.     Expression2 ::= Expression2  ">" Expression3;
GEExpression.     Expression2 ::= Expression2 ">=" Expression3;

AddExpression.    Expression3 ::= Expression3  "+" Expression4;
SubExpression.    Expression3 ::= Expression3  "-" Expression4;
TimesExpression.  Expression4 ::= Expression4 "*" Expression5;
DivExpression.    Expression4 ::= Expression4 "/" Expression5;
IntValue.         Expression5 ::= Integer;
VarValue.         Expression5 ::= Ident;

coercions Expression 5;

separator Stmt "";
separator nonempty Var ",";
separator VarDec ""; 

comment "//" ;
comment "/*" "*/" ;
